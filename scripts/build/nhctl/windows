#!/usr/bin/env bash
#
# Build a windows binary from linux
#

set -eu -o pipefail

TMP_VERSION=${VERSION:-$(git describe 2>/dev/null | sed 's/refs\/tags\///' | sed 's/\(.*\)-.*/\1/' | sed 's/-[0-9]*$//' || true)}
TMP_GITCOMMIT=$(git describe --match=NeVeRmAtCh --always --abbrev=40)

TMP_TAG=$(git tag -l --sort=v:refname | tail -1)
if [ -z "${GITHUB_ACTION:-}" ]; then
  for version in $TMP_GITCOMMIT $TMP_TAG; do
    echo "version: ""$version"
    curl -fL "https://nocalhost-generic.pkg.coding.net/nocalhost/syncthing/syncthing-windows-amd64.zip?version=""$version" -o syncthing-windows-amd64.zip --retry 5 || true
    if [[ -e "syncthing-windows-amd64.zip" ]]; then
      filesize=$(ls -l syncthing-windows-amd64.zip | awk '{ print $5 }')
      minsize=$((1024 * 1024 * 5))
      if [ "$filesize" -gt $minsize ]; then
        break
      fi
    fi
  done
fi

rm -fr syncthing-windows-amd64 || true
unzip syncthing-windows-amd64.zip
mv syncthing-windows-amd64/syncthing.exe ./internal/nhctl/syncthing/bin/syncthing_windows_amd64 || true
rm -fr syncthing-windows-amd64 syncthing-windows-amd64.zip || true

filesize=$(ls -l ./internal/nhctl/syncthing/bin/syncthing_windows_amd64 | awk '{ print $5 }')
minsize=$((1024 * 1024 * 10))
if [ "$filesize" -lt $minsize ]; then
  echo "$filesize < $minsize, syncthing binary is less than 10M, it's not available"
  exit 1
fi

export GOOS=windows
export GOARCH=amd64

source ./scripts/build/nhctl/.variables

# Override TARGET
TARGET="build/nhctl-$GOOS-$GOARCH.exe"

echo "Building $TARGET"
go build -o "${TARGET}" --ldflags "${LDFLAGS}" "${SOURCE}"
